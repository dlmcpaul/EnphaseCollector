FROM azul/zulu-openjdk-alpine:17 as builder
LABEL maintainer="dlmcpaul@gmail.com"

ENV JAVA_MINIMAL=/opt/jre

# Generate a minimal java runtime using the latest azul/zulu-openjdk-alpine
ARG JAR_FILE
COPY ${JAR_FILE} /app.jar

# Explode Uber jar into lib jars and classes
RUN "$JAVA_HOME/bin/jar" -xf app.jar

RUN MODULES=$("$JAVA_HOME/bin/jdeps" --ignore-missing-deps -q -recursive --multi-release 17 --print-module-deps --class-path "./BOOT-INF/lib/*" /app.jar) \
    && echo modules identified = "$MODULES" \
    && "$JAVA_HOME/bin/jlink" \
    --verbose \
    --add-modules "$MODULES" \
    --compress 2 \
    --strip-java-debug-attributes \
    --no-header-files \
    --no-man-pages \
    --output "$JAVA_MINIMAL"

# Start with fresh copy of alpine linux
FROM alpine:3
LABEL maintainer="dlmcpaul@gmail.com"

# copy our minimal runtime
ENV JAVA_MINIMAL=/opt/jre
ENV PATH="$PATH:$JAVA_MINIMAL/bin"
COPY --from=builder "$JAVA_MINIMAL" "$JAVA_MINIMAL"

# copy our application
COPY --from=builder "./BOOT-INF/lib" /app/lib
COPY --from=builder "./META-INF" /app/META-INF
COPY --from=builder "./BOOT-INF/classes" /app

# Override these for your timezone and language
ENV TZ="Australia/Sydney" \
    LANG="en_AU.UTF-8"

ENV SPRING_DATASOURCE_URL=jdbc:h2:/internal_db/solar_stats_db_v2
RUN mkdir "/properties"
RUN touch "/properties/application.properties"

# expose the internal endpoint
EXPOSE 8080

VOLUME /internal_db /properties

ENTRYPOINT ["java", "-cp", "app:app/lib/*", "-Djava.security.egd=file:/dev/./urandom", "-Dspring.jmx.enabled=false", "com.hz.EnphaseCollectorApplication", "--spring.config.additional-location=file:/properties/application.properties"]